#!/bin/sh

# cleanup
rm -rf obj_dir
rm -f top.vcd

# run Verilator to translate Verilog into C++, including C++ testbench
# -- Fetch -- #
verilator -cc pc_mux.sv                    
verilator -cc register.sv
verilator -cc PC.sv
verilator -cc instrmem.sv
verilator -cc FetchToDecode.sv
verilator -cc Fetch_stage.sv     
# -- Decode -- #
verilator -cc RegFile.sv
verilator -cc signextend.sv
verilator -cc main_decoder.sv
verilator -cc alu_decoder.sv
verilator -cc CU.sv
verilator -cc DecodeToExecute.sv
verilator -cc Decode_stage.sv
# -- Execute -- #
verilator -cc Mux3.sv
verilator -cc Mux.sv
verilator -cc ALU.sv
verilator -cc ExecuteToMemory.sv
verilator -cc Execute_stage.sv # NOTE NEED TO IMPLEMENT PC TARGET HERE
# -- Memory -- #
verilator -cc DataMemory.sv
verilator -cc MemoryToWriteback.sv
verilator -cc Memory_stage.sv
# -- Write Back -- #
verilator -cc Writeback_stage.sv # ALREADY COMPILED Mux3.sv
# -- Hazard Unit -- #
verilator -cc HazardUnit.sv
# -- Top File -- #
verilator -Wall --cc --trace Top.sv --exe F1_tb.cpp

# build C++ project via make automatically generated by Verilator
make -j -C obj_dir/ -f VTop.mk VTop

# run executable simulation
obj_dir/VTop
